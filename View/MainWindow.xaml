<Window x:Class="PixelDrawer.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:PixelDrawer"
        xmlns:vm="clr-namespace:PixelDrawer.ViewModel"
        xmlns:c="clr-namespace:PixelDrawer.CustomControls"
        mc:Ignorable="d"
        Title="PixelDrawer" Height="800" Width="1200">
    <Window.DataContext>
        <vm:MainWindowVM/>
    </Window.DataContext>
    <Grid x:Name="layoutGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="25"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="86"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="200"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Menu DockPanel.Dock="Top" Height="25" VerticalAlignment="Top" Grid.Column="0" Grid.ColumnSpan="3">
            <MenuItem Header="File">
                <MenuItem Header="Create" Command="{Binding ShowCreateWindowCmd}" ></MenuItem>
                <MenuItem Header="Open" Command="{Binding ShowOpenWindowCmd}"></MenuItem>
                <MenuItem Header="Save" Command="{Binding SaveCmd}"></MenuItem>
                <MenuItem Header="Save As" Command="{Binding SaveAsCmd}"></MenuItem>
                <Separator />
                <MenuItem Header="Exit" Command="{Binding ExitAppCmd}"></MenuItem>
            </MenuItem>
            <MenuItem Header="Edit" >
                <MenuItem Header="Undo" Command="{Binding UndoCmd}"></MenuItem>
                <MenuItem Header="Redo" Command="{Binding RedoCmd}"></MenuItem>
                <MenuItem Header="New Layer" Command="{Binding AddLayerCmd}"></MenuItem>
            </MenuItem>
            <MenuItem Header="View" Visibility="Hidden"></MenuItem>
        </Menu>
        <StatusBar Background="DarkGray" Height="25" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2">
            <TextBlock Text="x:"/>
            <TextBlock x:Name="xTextBlock" Text="{Binding Points.CurrentPoint.X,UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="y:"/>
            <TextBlock x:Name="yTextBlock" Text="{Binding Points.CurrentPoint.Y,UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="Scale:"/>
            <TextBlock x:Name="scaleTextBlock" Text="{Binding Projects.SelectedProject.Scale, UpdateSourceTrigger=PropertyChanged}" />
        </StatusBar>
        <ToolBarTray Background="DimGray" Orientation="Vertical" Grid.Column="0" Grid.Row="1">
            <ToolBar ItemsSource="{Binding Tools.Tools, Mode=OneWay}" Header="Tools">
                <ToolBar.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Style="{StaticResource {x:Type ToggleButton}}" GroupName="Tools" Content="{Binding ToolName}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.ChangeSelectedToolCmd }" CommandParameter="{Binding ToolId}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </RadioButton>
                    </DataTemplate>
                </ToolBar.ItemTemplate>
            </ToolBar>
            <ToolBar Header="Color">
                <tk:ColorPicker SelectedColor="{Binding Colors.SelectedColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="80" AvailableColorsSortingMode="HueSaturationBrightness"/>
            </ToolBar>
        </ToolBarTray>
            <TabControl Grid.Column="1" Grid.Row="1" x:Name="projects"  Background="DimGray" ItemsSource="{Binding Projects.ProjectsList, Mode=OneWay}" SelectedItem="{Binding Projects.SelectedProject, Mode=TwoWay}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}"/>
                            <Image Source="/Icons/closeImg.bmp" Margin="5, 0, 0, 0" Width="9" Height="9">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="MouseUp">
                                        <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.TabControlCloseCmd }" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.Projects.SelectedProject }" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </Image>
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate x:Name="imgTemplate">
                    <Grid Cursor="Cross" x:Name="grid">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">
                            <Border x:Name="border" BorderBrush="Black" BorderThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <ItemsControl ItemsSource="{Binding Layers, UpdateSourceTrigger=PropertyChanged}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas Width="{Binding Width}" Height="{Binding Height}">
                                                
                                            </Canvas>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Bitmap}" RenderOptions.BitmapScalingMode="NearestNeighbor" Visibility="{Binding Visibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            </Image>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <behaviors:Interaction.Triggers>
                                    <behaviors:KeyTrigger FiredOn="KeyDown" Key="Space">
                                        <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                            Path=DataContext.SpaceKeyDownCmd }" PassEventArgsToCommand="True"/>
                                    </behaviors:KeyTrigger>
                                    <behaviors:KeyTrigger FiredOn="KeyUp" Key="Space">
                                        <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                            Path=DataContext.SpaceKeyUpCmd }" PassEventArgsToCommand="True"/>
                                    </behaviors:KeyTrigger>
                                    <behaviors:EventTrigger EventName="MouseMove">
                                        <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                            Path=DataContext.DrawMouseMoveCmd }" PassEventArgsToCommand="True" />
                                    </behaviors:EventTrigger>
                                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                        <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                            Path=DataContext.DrawMouseClickCmd }" PassEventArgsToCommand="True" />
                                    </behaviors:EventTrigger>
                                    <behaviors:EventTrigger EventName="MouseWheel">
                                        <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                            Path=DataContext.MouseWheelCmd }" PassEventArgsToCommand="True" />
                                    </behaviors:EventTrigger>
                                    <behaviors:EventTrigger EventName="MouseEnter">
                                        <behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                            Path=DataContext.MouseEnterCmd}"/>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </Border>
                        </ScrollViewer>
                    </Grid>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        <ToolBarTray Grid.Column="2" Grid.Row="1" Background="DimGray" Orientation="Vertical" Width="200">
            <ToolBar x:Name="toolPropertiesBar" VerticalAlignment="Top" Header="Tool Properties" Width="200">
                <ItemsControl ItemsSource="{Binding Tools.SelectedToolProperties.PropertiesView, Mode=OneWay}"/>
            </ToolBar>
            <ToolBar x:Name="layersControlBar" VerticalAlignment="Top" Header="Layers" Width="200">
                <ListBox x:Name="layersView">
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Double" Command="{Binding DoubleLayerCmd}"></MenuItem>
                            <MenuItem Header="Delete" Command="{Binding DeleteLayerCmd}"></MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="SelectionChanged">
                            <behaviors:InvokeCommandAction Command="{Binding ChangeSelectedLayerCmd}" PassEventArgsToCommand="True"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel VerticalAlignment="Top"  Orientation="Vertical">
                                <VirtualizingStackPanel.LayoutTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </VirtualizingStackPanel.LayoutTransform>
                            </VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </ToolBar>
        </ToolBarTray>
    </Grid>
</Window>
